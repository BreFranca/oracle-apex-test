  CREATE TABLE "EBA_DEMO_CHART_ORDERS" 
   (	"ORDER_ID" NUMBER NOT NULL ENABLE, 
	"PRODUCT_ID" NUMBER, 
	"QUANTITY" NUMBER(8,0), 
	"SALES_DATE" DATE, 
	"CREATED" TIMESTAMP (6) WITH TIME ZONE, 
	"CREATED_BY" VARCHAR2(255), 
	"UPDATED" TIMESTAMP (6) WITH TIME ZONE, 
	"UPDATED_BY" VARCHAR2(255), 
	"CUSTOMER_ID" NUMBER, 
	 CONSTRAINT "EBA_DEMO_CHART_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "EBA_DEMO_CHART_ORDERS_ERR$" 
   (	"ORA_ERR_NUMBER$" NUMBER, 
	"ORA_ERR_MESG$" VARCHAR2(2000), 
	"ORA_ERR_ROWID$" UROWID (4000), 
	"ORA_ERR_OPTYP$" VARCHAR2(2), 
	"ORA_ERR_TAG$" VARCHAR2(2000), 
	"ORDER_ID" VARCHAR2(4000), 
	"PRODUCT_ID" VARCHAR2(4000), 
	"QUANTITY" VARCHAR2(4000), 
	"SALES_DATE" VARCHAR2(4000), 
	"CREATED" VARCHAR2(4000), 
	"CREATED_BY" VARCHAR2(4000), 
	"UPDATED" VARCHAR2(4000), 
	"UPDATED_BY" VARCHAR2(4000), 
	"CUSTOMER_ID" VARCHAR2(4000)
   ) ;

  CREATE TABLE "EBA_DEMO_CHART_PRODUCTS" 
   (	"PRODUCT_ID" NUMBER NOT NULL ENABLE, 
	"PRODUCT_NAME" VARCHAR2(50), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000), 
	"LIST_PRICE" NUMBER(8,2), 
	"CREATED" TIMESTAMP (6) WITH TIME ZONE, 
	"CREATED_BY" VARCHAR2(255), 
	"UPDATED" TIMESTAMP (6) WITH TIME ZONE, 
	"UPDATED_BY" VARCHAR2(255), 
	 CONSTRAINT "EBA_DEMO_CHART_PROD_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "EBA_DEMO_CUSTOMER" 
   (	"CUSTOMER_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUSTOMER" VARCHAR2(4000 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "EBA_DEMO_CUSTOMER_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX  ENABLE
   ) ;

  ALTER TABLE "EBA_DEMO_CHART_ORDERS" ADD CONSTRAINT "EBA_DEMO_CHART_ORDERS_CON" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "EBA_DEMO_CUSTOMER" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "EBA_DEMO_CHART_ORDERS" ADD CONSTRAINT "EBA_DEMO_CHART_ORDER_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "EBA_DEMO_CHART_PRODUCTS" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;

  CREATE INDEX "EBA_DEMO_CHART_ORD_1" ON "EBA_DEMO_CHART_ORDERS" ("QUANTITY") 
  ;

  CREATE INDEX "EBA_DEMO_CHART_ORD_2" ON "EBA_DEMO_CHART_ORDERS" ("PRODUCT_ID") 
  ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "BIU_EBA_DEMO_CHART_ORDERS" 
   before insert or update on eba_demo_chart_orders 
   for each row 
begin   
   if :new."ORDER_ID" is null then 
     select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.order_id from dual; 
   end if; 
   if inserting then 
       :new.created := current_timestamp; 
       :new.created_by := nvl(wwv_flow.g_user,user); 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
   if inserting or updating then 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
end; 
 

/
ALTER TRIGGER "BIU_EBA_DEMO_CHART_ORDERS" ENABLE;

   COMMENT ON TABLE "EBA_DEMO_CHART_ORDERS_ERR$"  IS 'DML Error Logging table for "EBA_DEMO_CHART_ORDERS"';

  CREATE INDEX "EBA_DEMO_CHART_PROD_1" ON "EBA_DEMO_CHART_PRODUCTS" ("LIST_PRICE") 
  ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "BIU_EBA_DEMO_CHART_PRODUCTS" 
   before insert or update on eba_demo_chart_products 
   for each row 
begin   
   if :new."PRODUCT_ID" is null then 
     select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.product_id from dual; 
   end if; 
   if inserting then 
       :new.created := current_timestamp; 
       :new.created_by := nvl(wwv_flow.g_user,user); 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
   if inserting or updating then 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
end; 
 

/
ALTER TRIGGER "BIU_EBA_DEMO_CHART_PRODUCTS" ENABLE;












create or replace TRIGGER "BIU_EBA_DEMO_CHART_ORDERS"  
   before insert or update on eba_demo_chart_orders 
   for each row 
begin   
   if :new."ORDER_ID" is null then 
     select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.order_id from dual; 
   end if; 
   if inserting then 
       :new.created := current_timestamp; 
       :new.created_by := nvl(wwv_flow.g_user,user); 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
   if inserting or updating then 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
end; 
 
/
create or replace TRIGGER "BIU_EBA_DEMO_CHART_PRODUCTS"  
   before insert or update on eba_demo_chart_products 
   for each row 
begin   
   if :new."PRODUCT_ID" is null then 
     select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.product_id from dual; 
   end if; 
   if inserting then 
       :new.created := current_timestamp; 
       :new.created_by := nvl(wwv_flow.g_user,user); 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
   if inserting or updating then 
       :new.updated := current_timestamp; 
       :new.updated_by := nvl(wwv_flow.g_user,user); 
   end if; 
end; 
 
/ 